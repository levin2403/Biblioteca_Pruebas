/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package presentation.panels;

import dao.BookDAO;
import daoInterfaces.IBookDAO;
import entityes.Book;
import exceptions.DAOException;
import exceptions.FacadeException;
import facade.RemoveBookFCD;
import facadeInterfaces.IRemoveBookFCD;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author skevi
 */
public class PnlRemoveBook extends javax.swing.JPanel {

    IBookDAO bookDAO;
    
    IRemoveBookFCD removeBookFCD;
    
    /**
     * Creates new form PnlDelateUser
     */
    public PnlRemoveBook() {
        initComponents();
        initialConfig();
        loadTable();
    }
    
    /**
     * 
     */
    private void initialConfig(){
        this.bookDAO = new BookDAO();
        this.removeBookFCD = new RemoveBookFCD();
    }
    
    /**
     * 
     */
    private void loadTable(){
        String[] columns = {"ISBN", "Titulo", "Autor", "Estado"};
        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        
        try{
            List<Book> books = bookDAO.getBooks();
            
            for (Book book : books) {
                Object[] object = {
                    book.getIsbn(),
                    book.getTitulo(),
                    book.getAutor(),
                    (book.isPrestado() == false) ? "Disponible" : "Prestado"
                };
                tableModel.addRow(object);
            }
            
            this.tblBooks.setModel(tableModel);
            
        }catch(DAOException de){
            JOptionPane.showMessageDialog(this, 
                    "Error al cargar los libros: " + 
                    de.getMessage(),
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * 
     */
    private Book getSelectedBook(){
        try{
        int selectedRow = this.tblBooks.getSelectedRow();
        
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, 
                    "Debe seleccionar un libro para continuar",
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
        
        String isbn = (String)this.tblBooks.getValueAt(selectedRow, 0);
        
        Book book = bookDAO.searchByISBN(isbn);
        
        return book;
        
        }
        catch(DAOException de){
            JOptionPane.showMessageDialog(this, 
                    "Error al cargar los libros: " + 
                    de.getMessage(),
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
        return null;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblBooks = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        tblBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblBooks);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Selecciona un Libro a Eliminar");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Eliminar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(191, 191, 191))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(292, 292, 292))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            //removes the book selected by the user in the table.
            removeBookFCD.removeBook(getSelectedBook());
            loadTable();
        }catch(FacadeException fe){
            JOptionPane.showMessageDialog(this, 
                     fe.getMessage(),
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBooks;
    // End of variables declaration//GEN-END:variables
}
